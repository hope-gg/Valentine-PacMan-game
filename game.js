const canvas = document.getElementById('gameCanvas');
const ctx = canvas.getContext('2d');

// ==== –ê–î–ê–ü–¢–ê–¶–Ü–Ø –î–õ–Ø –°–ú–ê–†–¢–§–û–ù–Ü–í ====
function resizeCanvas() {
    canvas.width = window.innerWidth * 0.9;
    canvas.height = window.innerHeight * 0.8;
}
resizeCanvas();
window.addEventListener('resize', resizeCanvas);

let screen = 1;
let player = { collectedHearts: 0, lives: 5 };
let hearts = [];
const requiredHearts = 5;
const romanticMessages = [
  "You get one free drink! Happy Valentine's Day from Kanin!",
  "ùóîùóπùóπ ùòÅùóµùóÆùòÅ ùòÜùóºùòÇ ùóÆùóøùó≤ ùó∂ùòÄ ùóÆùóπùóπ ùòÅùóµùóÆùòÅ ùóú‚Äôùóπùóπ ùó≤ùòÉùó≤ùóø ùóªùó≤ùó≤ùó±.",
  "ùóßùóÆùó∏ùó≤ ùó∫ùòÜ ùóµùóÆùóªùó±, ùòÅùóÆùó∏ùó≤ ùó∫ùòÜ ùòÑùóµùóºùóπùó≤ ùóπùó∂ùó≥ùó≤ ùòÅùóºùóº, ùóØùòÇùòÅ ùóú ùó∞ùóÆùóª'ùòÅ ùóµùó≤ùóπùóΩ ùó≥ùóÆùóπùóπùó∂ùóªùó¥ ùó∂ùóª ùóπùóºùòÉùó≤ ùòÑùó∂ùòÅùóµ ùòÜùóºùòÇ.",
  "ùóüùó∂ùó≥ùó≤ ùó∂ùòÄ ùóØùó≤ùòÅùòÅùó≤ùóø ùòÑùóµùó≤ùóª ùóú ùóµùóÆùòÉùó≤ ùòÜùóºùòÇ ùóØùòÜ ùó∫ùòÜ ùòÄùó∂ùó±ùó≤.",
  "You get one free drink! Happy Valentine's Day from Kanin!",
  "ùó™ùó∂ùòÅùóµ ùòÜùóºùòÇ, ùó≤ùòÉùó≤ùóøùòÜ ùó∫ùóºùó∫ùó≤ùóªùòÅ ùó∂ùòÄ ùó©ùóÆùóπùó≤ùóªùòÅùó∂ùóªùó≤'ùòÄ ùóóùóÆùòÜ.",
  "ùóú ùó≥ùó≤ùóπùóπ ùó∂ùóª ùóπùóºùòÉùó≤ ùòÑùó∂ùòÅùóµ ùòÜùóºùòÇ ùóÆùóªùó± ùóú'ùó± ùó±ùóº ùó∂ùòÅ ùóÆùóπùóπ ùóºùòÉùó≤ùóø ùóÆùó¥ùóÆùó∂ùóª.",
  "ùó¨ùóºùòÇ ùóÆùóøùó≤ ùó∫ùòÜ ùó≥ùó∂ùóøùòÄùòÅ, ùó∫ùòÜ ùóπùóÆùòÄùòÅ, ùó∫ùòÜ ùó≤ùòÉùó≤ùóøùòÜùòÅùóµùó∂ùóªùó¥.",
  "You get one free drink! Happy Valentine's Day from Kanin!",
  "You get one free drink! Happy Valentine's Day from Kanin!",
  "You get one free drink! Happy Valentine's Day from Kanin!",
  "ùó¨ùóºùòÇ ùóÆùóøùó≤ ùòÅùóµùó≤ ùóØùó≤ùòÄùòÅ ùòÅùóµùó∂ùóªùó¥ ùòÅùóµùóÆùòÅ ùó≤ùòÉùó≤ùóø ùóµùóÆùóΩùóΩùó≤ùóªùó≤ùó± ùòÅùóº ùó∫ùó≤.",
  "You get one free drink! Happy Valentine's Day from Kanin!",
  "ùóú ùó∞ùóµùóºùóºùòÄùó≤ ùòÜùóºùòÇ, ùóÆùóªùó± ùóú‚Äôùó± ùó∞ùóµùóºùóºùòÄùó≤ ùòÜùóºùòÇ ùóÆùóπùóπ ùóºùòÉùó≤ùóø ùóÆùó¥ùóÆùó∂ùóª.",
  "You get one free drink! Happy Valentine's Day from Kanin!",
  "You get one free drink! Happy Valentine's Day from Kanin!",
  "ùóú ùó∞ùóÆùóª'ùòÅ ùó∂ùó∫ùóÆùó¥ùó∂ùóªùó≤ ùóÆ ùó≥ùòÇùòÅùòÇùóøùó≤ ùòÑùó∂ùòÅùóµùóºùòÇùòÅ ùòÜùóºùòÇ.",
  "ùóòùòÉùó≤ùóøùòÜ ùó±ùóÆùòÜ ùóú ùòÄùóΩùó≤ùóªùó± ùòÑùó∂ùòÅùóµ ùòÜùóºùòÇ ùó∂ùòÄ ùó∫ùòÜ ùó≥ùóÆùòÉùóºùóøùó∂ùòÅùó≤.",
  "ùóúùó≥ ùóú ùóµùóÆùó± ùòÅùóº ùó∞ùóµùóºùóºùòÄùó≤ ùóÆùóπùóπ ùóºùòÉùó≤ùóø ùóÆùó¥ùóÆùó∂ùóª, ùóú‚Äôùó± ùòÄùòÅùó∂ùóπùóπ ùó∞ùóµùóºùóºùòÄùó≤ ùòÜùóºùòÇ.",
  "ùó¢ùòÇùóø ùóπùóºùòÉùó≤ ùó∂ùòÄ ùóÆ ùòÄùòÅùóºùóøùòÜ ùòÑùó∂ùòÅùóµùóºùòÇùòÅ ùó≤ùóªùó±.",
  "ùó™ùó∂ùòÅùóµ ùó≤ùòÉùó≤ùóøùòÜ ùóØùóøùó≤ùóÆùòÅùóµ ùóú ùòÅùóÆùó∏ùó≤, ùóú ùóπùóºùòÉùó≤ ùòÜùóºùòÇ ùó∫ùóºùóøùó≤.",
  "ùóú ùó≥ùó≤ùóπùóπ ùó∂ùóª ùóπùóºùòÉùó≤ ùòÑùó∂ùòÅùóµ ùòÜùóºùòÇ ùóÆùóªùó± ùóú‚Äôùó± ùó≥ùóÆùóπùóπ ùóÆùóπùóπ ùóºùòÉùó≤ùóø ùóÆùó¥ùóÆùó∂ùóª.",
  "You get one free drink! Happy Valentine's Day from Kanin!",
  "You get one free drink! Happy Valentine's Day from Kanin!",
];

let finalMessage = romanticMessages[Math.floor(Math.random() * romanticMessages.length)];

// ==== –§–û–ù–û–í–ê –ê–ù–Ü–ú–ê–¶–Ü–Ø ====
function drawBackground() {
  ctx.fillStyle = "#FCF5EB";
  ctx.fillRect(0, 0, canvas.width, canvas.height);
}

// ==== –ó–ê–í–ê–ù–¢–ê–ñ–ï–ù–ù–Ø –ó–û–ë–†–ê–ñ–ï–ù–¨ ====
const heartImage = new Image();
heartImage.src = 'assets/heart.png';
const brokenHeartImage = new Image();
brokenHeartImage.src = 'assets/heartbreak.png';
const cupidImage = new Image();
cupidImage.src = 'assets/cupid.png';
const buttonImage = new Image();
buttonImage.src = 'assets/button.png';

const imagesLoaded = { heart: false, brokenHeart: false, cupid: false, button: false };

heartImage.onload = () => imagesLoaded.heart = true;
brokenHeartImage.onload = () => imagesLoaded.brokenHeart = true;
cupidImage.onload = () => imagesLoaded.cupid = true;
buttonImage.onload = () => imagesLoaded.button = true;

function allImagesLoaded() {
  return imagesLoaded.heart && imagesLoaded.brokenHeart && imagesLoaded.cupid && imagesLoaded.button;
}

// ==== –§–£–ù–ö–¶–Ü–Ø –î–õ–Ø –°–ï–†–î–ï–¶–¨ ====
function createHeart(isBroken = false) {
    let newHeart;
    let isOverlapping;
    let attempts = 0;
    const maxAttempts = 100;

    do {
        isOverlapping = false;
        newHeart = {
            x: Math.random() * (canvas.width - 100),
            y: Math.random() * (canvas.height - 150),
            size: 100,
            isBroken: isBroken,
            speedX: (Math.random() - 0.5) * 2.5,
            speedY: (Math.random() - 0.5) * 2.5,
            opacity: 1,
            shrink: false
        };

        for (let heart of hearts) {
            if (Math.hypot(newHeart.x - heart.x, newHeart.y - heart.y) < 120) {
                isOverlapping = true;
                break;
            }
        }
        attempts++;
    } while (isOverlapping && attempts < maxAttempts);

    return newHeart;
}


// ==== –í–•–Ü–î–ù–ò–ô –ï–ö–†–ê–ù ====
function drawWelcomeScreen() {
  drawBackground();
  if (allImagesLoaded()) {
    ctx.drawImage(cupidImage, canvas.width / 2 - 50, 100, 100, 100);
    ctx.drawImage(buttonImage, canvas.width / 2 - 80, canvas.height / 2 + 40, 160, 160);
  }
  ctx.fillStyle = "#D72638";
  ctx.font = "42px 'Playfair Display', serif";
  ctx.textAlign = "center";
  ctx.fillText("LOVE IN THE AIR", canvas.width / 2, canvas.height / 2 - 50);
}

// ==== –ì–û–õ–û–í–ù–ò–ô –Ü–ì–†–û–í–ò–ô –ï–ö–†–ê–ù ====
function drawGameScreen() {
  drawBackground();
  ctx.fillStyle = "#D72638";
  ctx.font = "36px 'Inter', sans-serif";
  ctx.fillText(`Catch the hearts: ${player.collectedHearts}/${requiredHearts}`, canvas.width / 2, 50);

  hearts.forEach(heart => {
    ctx.globalAlpha = heart.opacity;
    if (allImagesLoaded()) {
      ctx.drawImage(heart.isBroken ? brokenHeartImage : heartImage, heart.x, heart.y, heart.size, heart.size);
    }
    heart.x += heart.speedX;
    heart.y += heart.speedY;
    if (heart.x < 0 || heart.x + heart.size > canvas.width) heart.speedX *= -1;
    if (heart.y < 0 || heart.y + heart.size > canvas.height) heart.speedY *= -1;
    ctx.globalAlpha = 1;
  });
}

// ==== –§–Ü–ù–ê–õ–¨–ù–ò–ô –ï–ö–†–ê–ù ====
function drawEndScreen() {
  drawBackground();
  
  ctx.fillStyle = "#D72638";
  ctx.font = "bold 32px 'Playfair Display', serif";
  ctx.textAlign = "center";

  const maxWidth = canvas.width * 0.7; // –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ—ó —à–∏—Ä–∏–Ω–∏ —Ç–µ–∫—Å—Ç—É
  const lineHeight = 40; // –í–∏—Å–æ—Ç–∞ —Ä—è–¥–∫–∞
  const x = canvas.width / 2;
  const y = canvas.height / 2;

  // –†–æ–∑–±–∏–≤–∞—î–º–æ —Ç–µ–∫—Å—Ç –Ω–∞ —Ä—è–¥–∫–∏, —â–æ–± –Ω–µ –≤–∏—Ö–æ–¥–∏–≤ –∑–∞ –º–µ–∂—ñ
  const words = finalMessage.split(" ");
  let line = "";
  let lines = [];
  
  for (let i = 0; i < words.length; i++) {
    let testLine = line + words[i] + " ";
    let testWidth = ctx.measureText(testLine).width;
    
    if (testWidth > maxWidth && i > 0) {
      lines.push(line);
      line = words[i] + " ";
    } else {
      line = testLine;
    }
  }
  lines.push(line); // –î–æ–¥–∞—î–º–æ –æ—Å—Ç–∞–Ω–Ω—ñ–π —Ä—è–¥–æ–∫

  // –í—ñ–¥–æ–±—Ä–∞–∂–∞—î–º–æ —Ç–µ–∫—Å—Ç, —Ä—ñ–≤–Ω–æ–º—ñ—Ä–Ω–æ —Ä–æ–∑–ø–æ–¥—ñ–ª—è—é—á–∏ —Ä—è–¥–∫–∏
  let startY = y - (lines.length * lineHeight) / 2;
  for (let i = 0; i < lines.length; i++) {
    ctx.fillText(lines[i], x, startY + (i * lineHeight));
  }
}


// ==== –ü–û–ö–†–ê–©–ï–ù–ê –û–ë–†–û–ë–ö–ê –ö–õ–Ü–ö–Ü–í ====
canvas.addEventListener("click", (e) => {
    const rect = canvas.getBoundingClientRect();
    const clickX = e.clientX - rect.left;
    const clickY = e.clientY - rect.top;

    if (screen === 1) {
        screen = 2;
        player.collectedHearts = 0;
        hearts = [];
        for (let i = 0; i < 10; i++) hearts.push(createHeart(Math.random() < 0.3));
    } else if (screen === 2) {
        hearts = hearts.filter(heart => {
            const distance = Math.hypot(clickX - (heart.x + heart.size / 2), clickY - (heart.y + heart.size / 2));

            if (distance < heart.size * 0.7) { // –ü–æ–∫—Ä–∞—â–µ–Ω–∞ –∑–æ–Ω–∞ –∫–ª—ñ–∫—É
                if (!heart.isBroken) {
                    player.collectedHearts++;
                    if (player.collectedHearts >= requiredHearts) {
                        screen = 3;
                    }
                } else {
                    player.collectedHearts = Math.max(0, player.collectedHearts - 1);
                }
                return false;
            }
            return true;
        });
    }
});

// ==== –ó–ê–ü–£–°–ö ====
function gameLoop() {
  if (screen === 1) drawWelcomeScreen();
  else if (screen === 2) drawGameScreen();
  else if (screen === 3) drawEndScreen();
  requestAnimationFrame(gameLoop);
}
window.addEventListener("load", gameLoop);
