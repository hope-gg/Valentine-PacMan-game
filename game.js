const canvas = document.getElementById('gameCanvas');
const ctx = canvas.getContext('2d');

canvas.width = window.innerWidth;
canvas.height = window.innerHeight;

window.addEventListener('resize', () => {
    canvas.width = window.innerWidth;
    canvas.height = window.innerHeight;
});

// === –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∑–æ–±—Ä–∞–∂–µ–Ω—å ===
const fullHeartImg = new Image();
fullHeartImg.src = "assets/heart (1).png";

const brokenHeartImg = new Image();
brokenHeartImg.src = "assets/broken-heart.png";

// === –ì–ª–æ–±–∞–ª—å–Ω—ñ –∑–º—ñ–Ω–Ω—ñ ===
let screen = 1; // 1 - –í—Ö—ñ–¥–Ω–∏–π –µ–∫—Ä–∞–Ω, 2 - –ì—Ä–∞, 3 - –§—ñ–Ω–∞–ª
let player = { collectedHearts: 0, lives: 3 };
let hearts = [];
const requiredHearts = 5;
const romanticMessages = [
    "You are my forever love üíï",
    "Every love story is beautiful, but ours is my favorite üíñ",
    "You hold my heart forever üíó",
    "You are my dream come true ‚ú®",
    "Love you to the moon and back üåôüíû"
];

// === –§—É–Ω–∫—Ü—ñ—è —Å—Ç–∞—Ä—Ç—É –≥—Ä–∏ ===
function startGame() {
    screen = 2;
    document.getElementById("startButton").style.display = "none";
    player.collectedHearts = 0;
    player.lives = 3;
    hearts = [];
    generateHearts();
    gameLoop();
}

// === –§—É–Ω–∫—Ü—ñ—è —Ñ–æ–Ω—É ===
function drawBackground() {
    ctx.fillStyle = "#ffe6f2";
    ctx.fillRect(0, 0, canvas.width, canvas.height);
}

// === –§—É–Ω–∫—Ü—ñ—è –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó —Å–µ—Ä–¥–µ—Ü—å ===
function generateHearts() {
    for (let i = 0; i < 10; i++) {
        hearts.push({
            x: Math.random() * (canvas.width - 50),
            y: Math.random() * (canvas.height - 200),
            size: 50,
            isBroken: Math.random() < 0.3, // 30% —à–∞–Ω—Å, —â–æ —Å–µ—Ä—Ü–µ –±—É–¥–µ —Ä–æ–∑–±–∏—Ç–∏–º
            speed: 1 + Math.random() * 2
        });
    }
}

// === –§—É–Ω–∫—Ü—ñ—è –º–∞–ª—é–≤–∞–Ω–Ω—è —Å–µ—Ä–¥–µ—Ü—å ===
function drawHearts() {
    hearts.forEach(heart => {
        if (heart.isBroken) {
            ctx.drawImage(brokenHeartImg, heart.x, heart.y, heart.size, heart.size);
        } else {
            ctx.drawImage(fullHeartImg, heart.x, heart.y, heart.size, heart.size);
        }
        heart.y += heart.speed;
        if (heart.y > canvas.height) {
            heart.y = -50;
            heart.x = Math.random() * (canvas.width - 50);
        }
    });
}

// === –ì–æ–ª–æ–≤–Ω–∏–π —ñ–≥—Ä–æ–≤–∏–π –µ–∫—Ä–∞–Ω ===
function drawGameScreen() {
    drawBackground();
    ctx.fillStyle = "#C14444";
    ctx.font = "30px Arial";
    ctx.textAlign = "center";
    ctx.fillText(`Hearts: ${player.collectedHearts}/${requiredHearts} | Lives: ${player.lives}`, canvas.width / 2, 50);
    drawHearts();
}

// === –§—ñ–Ω–∞–ª—å–Ω–∏–π –µ–∫—Ä–∞–Ω ===
function drawEndScreen() {
    drawBackground();
    ctx.fillStyle = "#C14444";
    ctx.font = "36px Arial";
    ctx.textAlign = "center";
    const message = romanticMessages[Math.floor(Math.random() * romanticMessages.length)];
    ctx.fillText(message, canvas.width / 2, canvas.height / 2);
}

// === –Ü–≥—Ä–æ–≤–∏–π —Ü–∏–∫–ª ===
function gameLoop() {
    if (screen === 2) {
        drawGameScreen();
    } else if (screen === 3) {
        drawEndScreen();
    }
    requestAnimationFrame(gameLoop);
}

// === –û–±—Ä–æ–±–∫–∞ –∫–ª—ñ–∫—ñ–≤ ===
canvas.addEventListener("click", (e) => {
    if (screen === 2) {
        hearts.forEach((heart, index) => {
            if (
                e.clientX > heart.x &&
                e.clientX < heart.x + heart.size &&
                e.clientY > heart.y &&
                e.clientY < heart.y + heart.size
            ) {
                if (heart.isBroken) {
                    player.lives--;
                } else {
                    player.collectedHearts++;
                }

                // –í–∏–¥–∞–ª—è—î–º–æ —Å–µ—Ä—Ü–µ –ø—ñ—Å–ª—è –∫–ª—ñ–∫—É
                hearts.splice(index, 1);

                // –î–æ–¥–∞—î–º–æ –Ω–æ–≤–µ —Å–µ—Ä—Ü–µ, —â–æ–± –±–∞–ª–∞–Ω—Å—É–≤–∞—Ç–∏ –≥—Ä—É
                hearts.push({
                    x: Math.random() * (canvas.width - 50),
                    y: -50,
                    size: 50,
                    isBroken: Math.random() < 0.3,
                    speed: 1 + Math.random() * 2
                });

                // –Ø–∫—â–æ –≥—Ä–∞–≤–µ—Ü—å –∑—ñ–±—Ä–∞–≤ 5 —Å–µ—Ä–¥–µ—Ü—å ‚Üí –ø–µ—Ä–µ–º–æ–≥–∞
                if (player.collectedHearts >= requiredHearts) {
                    screen = 3;
                }
            }
        });
    }
});

// === –î–æ–¥–∞—î–º–æ startGame —É –∫–Ω–æ–ø–∫—É ===
document.getElementById("startButton").addEventListener("click", startGame);

