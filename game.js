const canvas = document.getElementById('gameCanvas');
const ctx = canvas.getContext('2d');

// ==== –ê–î–ê–ü–¢–ê–¶–Ü–Ø –î–õ–Ø –°–ú–ê–†–¢–§–û–ù–Ü–í ====
function resizeCanvas() {
    canvas.width = window.innerWidth * 0.9;
    canvas.height = window.innerHeight * 0.8;
}
resizeCanvas();
window.addEventListener('resize', resizeCanvas);

let screen = 1;
let player = { collectedHearts: 0, lives: 5 };
let hearts = [];
const requiredHearts = 5;
const romanticMessages = [
  "ùó¨ùóºùòÇ ùóÆùóøùó≤ ùòÅùóµùó≤ ùòÄùóºùóªùó¥ ùòÅùóµùóÆùòÅ ùó∫ùòÜ ùóµùó≤ùóÆùóøùòÅ ùóπùóºùòÉùó≤ùòÄ ùòÅùóº ùòÄùó∂ùóªùó¥.",
  "ùóîùóπùóπ ùòÅùóµùóÆùòÅ ùòÜùóºùòÇ ùóÆùóøùó≤ ùó∂ùòÄ ùóÆùóπùóπ ùòÅùóµùóÆùòÅ ùóú‚Äôùóπùóπ ùó≤ùòÉùó≤ùóø ùóªùó≤ùó≤ùó±.",
  "ùóßùóÆùó∏ùó≤ ùó∫ùòÜ ùóµùóÆùóªùó±, ùòÅùóÆùó∏ùó≤ ùó∫ùòÜ ùòÑùóµùóºùóπùó≤ ùóπùó∂ùó≥ùó≤ ùòÅùóºùóº, ùóØùòÇùòÅ ùóú ùó∞ùóÆùóª'ùòÅ ùóµùó≤ùóπùóΩ ùó≥ùóÆùóπùóπùó∂ùóªùó¥ ùó∂ùóª ùóπùóºùòÉùó≤ ùòÑùó∂ùòÅùóµ ùòÜùóºùòÇ.",
  "ùóüùó∂ùó≥ùó≤ ùó∂ùòÄ ùóØùó≤ùòÅùòÅùó≤ùóø ùòÑùóµùó≤ùóª ùóú ùóµùóÆùòÉùó≤ ùòÜùóºùòÇ ùóØùòÜ ùó∫ùòÜ ùòÄùó∂ùó±ùó≤.",
  "ùóúùòÅ‚ÄôùòÄ ùóØùó≤ùó≤ùóª ùóÆ ùó∑ùóºùòÇùóøùóªùó≤ùòÜ ‚Ä¶ ùóºùóªùó≤ ùóú‚Äôùó± ùó±ùóº ùóÆùóπùóπ ùóºùòÉùó≤ùóø ùóÆùó¥ùóÆùó∂ùóª.",
  "ùóòùòÉùó≤ùóøùòÜ ùóπùóºùòÉùó≤ ùòÄùóºùóªùó¥ ùó∂ùòÄ ùóÆùóØùóºùòÇùòÅ ùòÜùóºùòÇ. ùóõùóÆùóΩùóΩùòÜ ùó©ùóÆùóπùó≤ùóªùòÅùó∂ùóªùó≤'ùòÄ ùóóùóÆùòÜ!",
  "ùóú ùóπùóºùòÉùó≤ ùòÅùóµùóÆùòÅ ùòÑùó≤'ùòÉùó≤ ùóªùó≤ùòÉùó≤ùóø ùóπùóºùòÄùòÅ ùòÅùóµùó≤ ùó∫ùóÆùó¥ùó∂ùó∞ ùòÅùóµùóÆùòÅ ùó∫ùóÆùó∏ùó≤ùòÄ ùòÇùòÄ ùòÇùòÄ.",
  "ùó™ùó∂ùòÅùóµ ùòÜùóºùòÇ, ùó≤ùòÉùó≤ùóøùòÜ ùó∫ùóºùó∫ùó≤ùóªùòÅ ùó∂ùòÄ ùó©ùóÆùóπùó≤ùóªùòÅùó∂ùóªùó≤'ùòÄ ùóóùóÆùòÜ.",
  "ùó¨ùóºùòÇ ùóÆùóøùó≤ ùòÅùóµùó≤ ùòÄùòÑùó≤ùó≤ùòÅùó≤ùòÄùòÅ ùóπùóºùòÉùó≤ ùòÄùóºùóªùó¥ ùó∫ùòÜ ùóµùó≤ùóÆùóøùòÅ ùóµùóÆùòÄ ùó≤ùòÉùó≤ùóø ùó∏ùóªùóºùòÑùóª.",
  "ùóüùóºùòÉùó∂ùóªùó¥ ùòÜùóºùòÇ ùó∂ùòÄ ùó∫ùòÜ ùó≥ùóÆùòÉùóºùóøùó∂ùòÅùó≤ ùóÆùó±ùòÉùó≤ùóªùòÅùòÇùóøùó≤.",
  "ùó¨ùóºùòÇ ùóÆùóªùó± ùó∫ùó≤, ùòÅùóºùó¥ùó≤ùòÅùóµùó≤ùóø ùó≥ùóºùóøùó≤ùòÉùó≤ùóø‚ÄîùóªùóºùòÅùóµùó∂ùóªùó¥ ùó≤ùóπùòÄùó≤ ùó∫ùóÆùòÅùòÅùó≤ùóøùòÄ.",
  "ùóú ùóπùóºùòÉùó≤ ùòÜùóºùòÇ, ùóªùóºùòÅ ùó∑ùòÇùòÄùòÅ ùó≥ùóºùóø ùòÑùóµùóº ùòÜùóºùòÇ ùóÆùóøùó≤, ùóØùòÇùòÅ ùó≥ùóºùóø ùóµùóºùòÑ ùòÜùóºùòÇ ùó∫ùóÆùó∏ùó≤ ùó∫ùó≤ ùó≥ùó≤ùó≤ùóπ.",
  "ùóúùóª ùòÜùóºùòÇ, ùóú'ùòÉùó≤ ùó≥ùóºùòÇùóªùó± ùó∫ùòÜ ùó≥ùóºùóøùó≤ùòÉùó≤ùóø.",
  "ùó¨ùóºùòÇùóø ùòÄùó∫ùó∂ùóπùó≤ ùó∂ùòÄ ùó∫ùòÜ ùó≥ùóÆùòÉùóºùóøùó∂ùòÅùó≤ ùòÄùòÇùóªùòÄùóµùó∂ùóªùó≤.",
  "ùóú ùó≥ùó≤ùóπùóπ ùó≥ùóºùóø ùòÜùóºùòÇ ùóÆùóªùó± ùó∂ùòÅ ùòÑùóÆùòÄ ùòÅùóµùó≤ ùóØùó≤ùòÄùòÅ ùó±ùó≤ùó∞ùó∂ùòÄùó∂ùóºùóª ùóú'ùòÉùó≤ ùó≤ùòÉùó≤ùóø ùó∫ùóÆùó±ùó≤."
  "ùó¨ùóºùòÇ ùó∫ùóÆùó∏ùó≤ ùó∫ùòÜ ùòÑùóºùóøùóπùó± ùóØùó≤ùóÆùòÇùòÅùó∂ùó≥ùòÇùóπ, ùóºùóªùó≤ ùòÄùó∫ùó∂ùóπùó≤ ùóÆùòÅ ùóÆ ùòÅùó∂ùó∫ùó≤.",
  "ùó¢ùòÇùóø ùóπùóºùòÉùó≤ ùó∂ùòÄ ùóÆ ùòÄùòÅùóºùóøùòÜ ùóú ùóªùó≤ùòÉùó≤ùóø ùòÑùóÆùóªùòÅ ùòÅùóº ùó≤ùóªùó±."
  "ùó¨ùóºùòÇ ùóÆùóªùó± ùó∫ùó≤, ùòÅùóºùó¥ùó≤ùòÅùóµùó≤ùóø ùó≥ùóºùóøùó≤ùòÉùó≤ùóø‚ÄîùóªùóºùòÅùóµùó∂ùóªùó¥ ùó≤ùóπùòÄùó≤ ùó∫ùóÆùòÅùòÅùó≤ùóøùòÄ.",
  "ùóú ùóπùóºùòÉùó≤ ùòÜùóºùòÇ, ùóªùóºùòÅ ùó∑ùòÇùòÄùòÅ ùó≥ùóºùóø ùòÑùóµùóº ùòÜùóºùòÇ ùóÆùóøùó≤, ùóØùòÇùòÅ ùó≥ùóºùóø ùóµùóºùòÑ ùòÜùóºùòÇ ùó∫ùóÆùó∏ùó≤ ùó∫ùó≤ ùó≥ùó≤ùó≤ùóπ."
];

let finalMessage = romanticMessages[Math.floor(Math.random() * romanticMessages.length)];

// ==== –§–û–ù–û–í–ê –ê–ù–Ü–ú–ê–¶–Ü–Ø ====
function drawBackground() {
  ctx.fillStyle = "#FCF5EB";
  ctx.fillRect(0, 0, canvas.width, canvas.height);
}

// ==== –ó–ê–í–ê–ù–¢–ê–ñ–ï–ù–ù–Ø –ó–û–ë–†–ê–ñ–ï–ù–¨ ====
const heartImage = new Image();
heartImage.src = 'assets/heart.png';
const brokenHeartImage = new Image();
brokenHeartImage.src = 'assets/heartbreak.png';
const cupidImage = new Image();
cupidImage.src = 'assets/cupid.png';
const buttonImage = new Image();
buttonImage.src = 'assets/button.png';

const imagesLoaded = { heart: false, brokenHeart: false, cupid: false, button: false };

heartImage.onload = () => imagesLoaded.heart = true;
brokenHeartImage.onload = () => imagesLoaded.brokenHeart = true;
cupidImage.onload = () => imagesLoaded.cupid = true;
buttonImage.onload = () => imagesLoaded.button = true;

function allImagesLoaded() {
  return imagesLoaded.heart && imagesLoaded.brokenHeart && imagesLoaded.cupid && imagesLoaded.button;
}

// ==== –§–£–ù–ö–¶–Ü–Ø –î–õ–Ø –°–ï–†–î–ï–¶–¨ ====
function createHeart(isBroken = false) {
  return {
    x: Math.random() * (canvas.width - 100),
    y: Math.random() * (canvas.height - 150),
    size: 100, // –¢—Ä–æ—Ö–∏ –±—ñ–ª—å—à–µ –¥–ª—è –∫—Ä–∞—â–æ–≥–æ –∫–ª—ñ–∫—É
    isBroken: isBroken,
    speedX: (Math.random() - 0.5) * 2.5,
    speedY: (Math.random() - 0.5) * 2.5,
    opacity: 1,
    shrink: false
  };
}

// ==== –í–•–Ü–î–ù–ò–ô –ï–ö–†–ê–ù ====
function drawWelcomeScreen() {
  drawBackground();
  if (allImagesLoaded()) {
    ctx.drawImage(cupidImage, canvas.width / 2 - 50, 100, 100, 100);
    ctx.drawImage(buttonImage, canvas.width / 2 - 80, canvas.height / 2 + 40, 160, 160);
  }
  ctx.fillStyle = "#D72638";
  ctx.font = "42px 'Playfair Display', serif";
  ctx.textAlign = "center";
  ctx.fillText("LOVE IN THE AIR", canvas.width / 2, canvas.height / 2 - 50);
}

// ==== –ì–û–õ–û–í–ù–ò–ô –Ü–ì–†–û–í–ò–ô –ï–ö–†–ê–ù ====
function drawGameScreen() {
  drawBackground();
  ctx.fillStyle = "#D72638";
  ctx.font = "36px 'Inter', sans-serif";
  ctx.fillText(`Catch the hearts: ${player.collectedHearts}/${requiredHearts}`, canvas.width / 2, 50);

  hearts.forEach(heart => {
    ctx.globalAlpha = heart.opacity;
    if (allImagesLoaded()) {
      ctx.drawImage(heart.isBroken ? brokenHeartImage : heartImage, heart.x, heart.y, heart.size, heart.size);
    }
    heart.x += heart.speedX;
    heart.y += heart.speedY;
    if (heart.x < 0 || heart.x + heart.size > canvas.width) heart.speedX *= -1;
    if (heart.y < 0 || heart.y + heart.size > canvas.height) heart.speedY *= -1;
    ctx.globalAlpha = 1;
  });
}

// ==== –§–Ü–ù–ê–õ–¨–ù–ò–ô –ï–ö–†–ê–ù ====
function drawEndScreen() {
  drawBackground();
  ctx.fillStyle = "#D72638";
  ctx.font = "bold 36px 'Playfair Display', serif";
  ctx.textAlign = "center";
  
  // –î–æ–¥–∞—î–º–æ –∫—Ä–∞—Å–∏–≤–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤ —Å—Ç–∏–ª—ñ "–º–µ—Å–µ–¥–∂"
  const boxWidth = canvas.width * 0.75;
  const boxHeight = 100;
  const boxX = (canvas.width - boxWidth) / 2;
  const boxY = (canvas.height / 2) - boxHeight / 2;

  // –ú–∞–ª—é—î–º–æ –±—ñ–ª—É "—Ä–∞–º–∫—É" –¥–ª—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
  ctx.fillStyle = "#FFFFFF";
  ctx.fillRect(boxX, boxY, boxWidth, boxHeight);
  ctx.strokeStyle = "#D72638";
  ctx.lineWidth = 4;
  ctx.strokeRect(boxX, boxY, boxWidth, boxHeight);

  // –¢–µ–∫—Å—Ç —É—Å–µ—Ä–µ–¥–∏–Ω—ñ
  ctx.fillStyle = "#D72638";
  ctx.fillText(finalMessage, canvas.width / 2, canvas.height / 2);
}

// ==== –ü–û–ö–†–ê–©–ï–ù–ê –û–ë–†–û–ë–ö–ê –ö–õ–Ü–ö–Ü–í ====
canvas.addEventListener("click", (e) => {
    const rect = canvas.getBoundingClientRect();
    const clickX = e.clientX - rect.left;
    const clickY = e.clientY - rect.top;

    if (screen === 1) {
        screen = 2;
        player.collectedHearts = 0;
        hearts = [];
        for (let i = 0; i < 10; i++) hearts.push(createHeart(Math.random() < 0.3));
    } else if (screen === 2) {
        hearts = hearts.filter(heart => {
            const distance = Math.hypot(clickX - (heart.x + heart.size / 2), clickY - (heart.y + heart.size / 2));

            if (distance < heart.size * 0.7) { // –ü–æ–∫—Ä–∞—â–µ–Ω–∞ –∑–æ–Ω–∞ –∫–ª—ñ–∫—É
                if (!heart.isBroken) {
                    player.collectedHearts++;
                    if (player.collectedHearts >= requiredHearts) {
                        screen = 3;
                    }
                } else {
                    player.collectedHearts = Math.max(0, player.collectedHearts - 1);
                }
                return false;
            }
            return true;
        });
    }
});

// ==== –ó–ê–ü–£–°–ö ====
function gameLoop() {
  if (screen === 1) drawWelcomeScreen();
  else if (screen === 2) drawGameScreen();
  else if (screen === 3) drawEndScreen();
  requestAnimationFrame(gameLoop);
}
window.addEventListener("load", gameLoop);

